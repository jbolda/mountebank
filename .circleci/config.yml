version: 2.0

jobs:
  build:
    docker:
      - image: circleci/node:8.9.4-stretch
    environment:
      - MB_RUN_WEB_TESTS=true
      - CC_TEST_REPORTER_ID=8bc3a050a2f8ef1cc460e5f4c72d18a689c8ae0981bf494031eb4eb28bbd0b0b
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: ./build lint test dist version trigger:travis jsdoc deploy:docs codeclimate sonar
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: .
          # Ignore src; use dist for all downstream jobs, but keep enough to run tests
          root: .
          paths:
            - functionalTest
            - performanceTest
            - test
            - tasks
            - dist
            - Gruntfile.js
            - node_modules
            - scripts
            - circlebuild
            - firebase.json
            - .jsdoc
            - Gemfile
            - Gemfile.lock
            - Procfile
            # Needed for triggering Appveyor build
            - .git
            - travis-*.txt
            - build.properties

  nodev6:
    docker:
      - image: circleci/node:6-stretch
    environment:
      - MB_SLOW_TEST_TIMEOUT: 6000
      - MB_PORT: 3535
    steps:
      - attach_workspace:
          at: .
      - run: ln -s dist/mountebank/src src
      - run: ln -s dist/mountebank/package.json package.json
      - run: ln -s dist/mountebank/bin bin
      - run: node_modules/grunt-cli/bin/grunt outOfProcessImposters test

  nodev10:
    docker:
      - image: circleci/node:10-stretch
    environment:
      - MB_SLOW_TEST_TIMEOUT: 6000
      - MB_PORT: 3535
    steps:
      - attach_workspace:
          at: .
      - run: ln -s dist/mountebank/src src
      - run: ln -s dist/mountebank/package.json package.json
      - run: ln -s dist/mountebank/bin bin
      - run: node_modules/grunt-cli/bin/grunt outOfProcessImposters test

  package-source:
    docker:
      - image: circleci/ruby:2.4.4-stretch-node
    environment:
      - MB_SLOW_TEST_TIMEOUT: 6000
      - MB_PORT: 3535
    steps:
      - attach_workspace:
          at: .
      # fpm install started failing even after bundle update
      - run: gem install fpm
      - run: bundle install --without development
      - run: ln -s dist/mountebank/src src
      - run: ln -s dist/mountebank/package.json package.json
      - run: node_modules/grunt-cli/bin/grunt test:npm deploy:s3

  package-tarball:
    docker:
      - image: circleci/ruby:2.4.4-stretch-node
    environment:
      - MB_SLOW_TEST_TIMEOUT: 6000
      - MB_PORT: 3535
    steps:
      - attach_workspace:
          at: .
      # fpm install started failing even after bundle update
      - run: gem install fpm
      - run: bundle install --without development
      - run: ln -s dist/mountebank/src src
      - run: ln -s dist/mountebank/package.json package.json
      - run: node_modules/grunt-cli/bin/grunt dist:tarball:x86 test:tarball:x64 deploy:s3

  package-zip:
    docker:
      - image: circleci/ruby:2.4.4-stretch-node
    environment:
      - MB_SLOW_TEST_TIMEOUT: 6000
      - MB_PORT: 3535
    steps:
      - attach_workspace:
          at: .
      # fpm install started failing even after bundle update
      - run: gem install fpm
      - run: bundle install --without development
      - run: ln -s dist/mountebank/src src
      - run: ln -s dist/mountebank/package.json package.json
      - run: node_modules/grunt-cli/bin/grunt dist:zip:x64 dist:zip:x86 deploy:s3 trigger:appveyor
      - persist_to_workspace:
          root: .
          paths:
            - appveyor-*.txt

  package-deb:
    docker:
      - image: circleci/ruby:2.4.4-stretch-node
    environment:
      - MB_SLOW_TEST_TIMEOUT: 6000
      - MB_PORT: 3535
    steps:
      - attach_workspace:
          at: .
      # fpm install started failing even after bundle update
      - run: gem install fpm
      - run: bundle install --without development
      - run: ln -s dist/mountebank/src src
      - run: ln -s dist/mountebank/package.json package.json
      - run: node_modules/grunt-cli/bin/grunt test:deb deploy:s3

  package-rpm:
    docker:
      - image: bbyars/mountebank-centos:latest
    environment:
      - MB_SLOW_TEST_TIMEOUT: 6000
      - MB_PORT: 3535
    steps:
      - attach_workspace:
          at: .
      # fpm install started failing even after bundle update
      - run: gem install fpm
      - run: bundle install --without development
      - run: ln -s dist/mountebank/src src
      - run: ln -s dist/mountebank/package.json package.json
      - run: node_modules/grunt-cli/bin/grunt test:rpm
      # Can't use dpl on centos; refactor with non-dpl based script
      - persist_to_workspace:
          root: .
          paths:
            - dist/*.rpm

  performance:
    docker:
      - image: circleci/node:8.9.4-stretch
    environment:
      - MB_EXECUTABLE: /home/circleci/project/dist/mountebank/bin/mb
    steps:
      - attach_workspace:
          at: .
      - run: ln -s dist/mountebank/src src
      - run: ln -s dist/mountebank/package.json package.json
      - run: node_modules/grunt-cli/bin/grunt test:performance

  windows:
    docker:
      - image: circleci/node:8.9.4-stretch
    steps:
      - attach_workspace:
          at: .
      - run: node_modules/grunt-cli/bin/grunt waitFor:appveyor

  osx:
    docker:
      - image: circleci/node:8.9.4-stretch
    steps:
      - attach_workspace:
          at: .
      - run: node_modules/grunt-cli/bin/grunt waitFor:travis

  deploy:
    docker:
      - image: circleci/ruby:2.4.4-stretch-node
    steps:
      - attach_workspace:
          at: .
      - run: ls -al dist
        # $BASH_ENV workaround due to env var isolation: https://discuss.circleci.com/t/exporting-environment-variables-from-sourced-scripts/4564/4
      - run: if [ -n "`grep publish=true build.properties`" ]; then echo export MB_PUBLISH=true >> "$BASH_ENV"; else echo export MB_PUBLISH=false >> "$BASH_ENV"; fi
      - run: echo "MB_PUBLISH=$MB_PUBLISH"
      # fpm install started failing even after bundle update
      - run: gem install fpm
      - run: bundle install --without development
      - run: ln -s dist/mountebank/src src
      - run: ln -s dist/mountebank/package.json package.json
      - run: node_modules/grunt-cli/bin/grunt deploy:s3 deploy:heroku deploy:npm

workflows:
  version: 2
  full_build:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
      - osx:
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
      - package-source:
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
      - package-zip:
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
      - windows:
          requires:
            - package-zip
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
      - package-tarball:
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
      - package-deb:
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
      - package-rpm:
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
      - nodev6:
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
      - nodev10:
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
      - performance:
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
      - deploy:
          requires:
            - package-source
            - package-zip
            - package-tarball
            - package-deb
            - package-rpm
            - nodev6
            - nodev10
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/

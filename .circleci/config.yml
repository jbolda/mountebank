version: 2.0

jobs:
  pr:
    docker:
      - image: circleci/node:14-stretch
    environment:
      - MB_SLOW_TEST_TIMEOUT: 7000
    steps:
      - checkout
      - run: npm ci
      - run: cd mbTest && npm ci
      - run: npm test

  build:
    docker:
      - image: circleci/node:14-stretch
    environment:
      - CC_TEST_REPORTER_ID=8bc3a050a2f8ef1cc460e5f4c72d18a689c8ae0981bf494031eb4eb28bbd0b0b
      - MB_SLOW_TEST_TIMEOUT: 7000
    steps:
      - checkout
      - run: npm ci
      - run: cd mbTest && npm ci
      - run: node tasks/tmp/version.js
      #- run: npm test
      #- run: scripts/codeclimate
      #- run: cat ./coverage/lcov.info | node_modules/coveralls/bin/coveralls.js
      #- run: scripts/sonar
      #- run: npm run jsdoc && node tasks/tmp/deploy/docs.js
      - run: node tasks/tmp/dist/dist.js
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - tasks
            - scripts
            - Procfile

  package:
    docker:
      - image: circleci/ruby:2.4.4-stretch
    environment:
      - NODE_VERSION=v14.16.0
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install Dependencies
          command: |
            sudo apt-get update
            sudo apt-get install rpm
            sudo apt-get install python-dateutil
            gem install fpm
      - run:
          name: Create Packages
          command: |
            scripts/dist/createSelfContainedTarball darwin x64 $NODE_VERSION
            scripts/dist/createSelfContainedTarball linux x64 $NODE_VERSION
            scripts/dist/createWindowsZip x86 $NODE_VERSION
            scripts/dist/createWindowsZip x64 $NODE_VERSION
            scripts/dist/createPackage linux deb
            scripts/dist/createPackage linux osxpkg
            scripts/dist/createPackage linux rpm
            cd dist && npm pack mountebank && cd ..
      - run:
         name: Deploy to S3
         command: scripts/deploy/deployS3 dist/*.tar.gz dist/*.tgz dist/*.zip dist/*.deb dist/*.rpm dist/*.pkg

#  nodev10:
#    docker:
#      - image: circleci/node:10-stretch
#    environment:
#      - MB_SLOW_TEST_TIMEOUT: 7000
#      - MB_PORT: 3535
#      - MB_PERSISTENT: true
#      - MB_EXECUTABLE: dist/mountebank/bin/mb
#    steps:
#      - attach_workspace:
#          at: .
#      - run: node tasks/tmp/outOfProcessImposters.js
#      - run: dist/mountebank/bin/mb start --allowInjection --mock --localOnly --protofile protocols.json --port $MB_PORT &
#      - run: cd dist/test && npm test
#      - run: dist/mountebank/bin/mb stop

#  dbAndWeb:
#    docker:
#      - image: circleci/node:12-stretch
#    environment:
#      - MB_SLOW_TEST_TIMEOUT: 7000
#      - MB_PORT: 3535
#      - MB_RUN_WEB_TESTS=true
#      - MB_EXECUTABLE: dist/mountebank/bin/mb
#    steps:
#      - attach_workspace:
#          at: .
#      - run: npm run config:outOfProcess && npm run test:functional

#  package-source:
#    docker:
#      - image: circleci/ruby:2.4.4-stretch
#    environment:
#      - MB_SLOW_TEST_TIMEOUT: 7000
#      - MB_PORT: 3535
#    steps:
#      - attach_workspace:
#          at: .
#      - run:
#          name: Update Node.js and npm
#          command: |
#            curl -sSL "https://nodejs.org/dist/v12.9.1/node-v12.9.1-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v12.9.1-linux-x64/bin/node
#            curl https://www.npmjs.com/install.sh | sudo bash
#      - run:
#          name: Check current version of node
#          command: node -v
#      # fpm install started failing even after bundle update
#      - run: gem install fpm
#      - run: bundle install --without development
#      - run: node_modules/grunt-cli/bin/grunt test:npm deploy:s3

#  package-tarball:
#    docker:
#      - image: circleci/ruby:2.4.4-stretch
#    environment:
#      - MB_SLOW_TEST_TIMEOUT: 7000
#      - MB_PORT: 3535
#    steps:
#      - attach_workspace:
#          at: .
#      - run:
#          name: Update Node.js and npm
#          command: |
#            curl -sSL "https://nodejs.org/dist/v12.9.1/node-v12.9.1-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v12.9.1-linux-x64/bin/node
#            curl https://www.npmjs.com/install.sh | sudo bash
#      - run:
#          name: Check current version of node
#          command: node -v
#      # fpm install started failing even after bundle update
#      - run: gem install fpm
#      - run: bundle install --without development
#      - run: ln -s dist/mountebank/src src
#      - run: ln -s dist/mountebank/package.json package.json
#      - run: node_modules/grunt-cli/bin/grunt test:tarball:x64 deploy:s3
#
#  package-zip:
#    docker:
#      - image: circleci/ruby:2.4.4-stretch
#    environment:
#      - MB_SLOW_TEST_TIMEOUT: 7000
#      - MB_PORT: 3535
#    steps:
#      - attach_workspace:
#          at: .
#      - run:
#          name: Update Node.js and npm
#          command: |
#            curl -sSL "https://nodejs.org/dist/v12.9.1/node-v12.9.1-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v12.9.1-linux-x64/bin/node
#            curl https://www.npmjs.com/install.sh | sudo bash
#      - run:
#          name: Check current version of node
#          command: node -v
#      # fpm install started failing even after bundle update
#      - run: gem install fpm
#      - run: bundle install --without development
#      - run: ln -s dist/mountebank/src src
#      - run: ln -s dist/mountebank/package.json package.json
#      - run: node_modules/grunt-cli/bin/grunt dist:zip:x64 dist:zip:x86 deploy:s3 trigger:appveyor
#      - persist_to_workspace:
#          root: .
#          paths:
#            - appveyor-*.txt
#
#  package-deb:
#    docker:
#      - image: circleci/ruby:2.4.4-stretch
#    environment:
#      - MB_SLOW_TEST_TIMEOUT: 7000
#      - MB_PORT: 3535
#    steps:
#      - attach_workspace:
#          at: .
#      - run:
#          name: Update Node.js and npm
#          command: |
#            curl -sSL "https://nodejs.org/dist/v12.9.1/node-v12.9.1-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v12.9.1-linux-x64/bin/node
#            curl https://www.npmjs.com/install.sh | sudo bash
#      - run:
#          name: Check current version of node
#          command: node -v
#      # fpm install started failing even after bundle update
#      - run: gem install fpm
#      - run: bundle install --without development
#      - run: ln -s dist/mountebank/src src
#      - run: ln -s dist/mountebank/package.json package.json
#      - run: node_modules/grunt-cli/bin/grunt test:deb deploy:s3
#
#  package-rpm:
#    docker:
#      - image: bbyars/mountebank-centos:latest
#    environment:
#      - MB_SLOW_TEST_TIMEOUT: 7000
#      - MB_PORT: 3535
#    steps:
#      - attach_workspace:
#          at: .
#      # fpm install started failing even after bundle update
#      - run:
#          name: Update Node.js and npm
#          command: |
#            curl -sSL "https://nodejs.org/dist/v12.9.1/node-v12.9.1-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v12.9.1-linux-x64/bin/node
#            curl https://www.npmjs.com/install.sh | sudo bash
#      - run:
#          name: Check current version of node
#          command: node -v
#      - run: gem install fpm
#      - run: bundle install --without development
#      - run: ln -s dist/mountebank/src src
#      - run: ln -s dist/mountebank/package.json package.json
#      - run: node_modules/grunt-cli/bin/grunt test:rpm
#      # Can't use dpl on centos; refactor with non-dpl based script
#      - persist_to_workspace:
#          root: .
#          paths:
#            - dist/*.rpm
#
#  performance:
#    docker:
#      - image: circleci/node:12-stretch
#    environment:
#      - MB_EXECUTABLE: /home/circleci/project/dist/mountebank/bin/mb
#    steps:
#      - attach_workspace:
#          at: .
#      - run: ln -s dist/mountebank/src src
#      - run: ln -s dist/mountebank/package.json package.json
#      - run: node_modules/grunt-cli/bin/grunt test:performance
#
#  windows:
#    docker:
#      - image: circleci/node:12-stretch
#    steps:
#      - attach_workspace:
#          at: .
#      - run: node_modules/grunt-cli/bin/grunt waitFor:appveyor
#
#  osx:
#    docker:
#      - image: circleci/node:12-stretch
#    steps:
#      - attach_workspace:
#          at: .
#      - run: node_modules/grunt-cli/bin/grunt waitFor:travis
#
#  deploy:
#    docker:
#      - image: circleci/ruby:2.4.4-stretch
#    steps:
#      - setup_remote_docker
#      - attach_workspace:
#          at: .
#      - run:
#          name: Update Node.js and npm
#          command: |
#            curl -sSL "https://nodejs.org/dist/v12.9.1/node-v12.9.1-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v12.9.1-linux-x64/bin/node
#            curl https://www.npmjs.com/install.sh | sudo bash
#      - run:
#          name: Check current version of node
#          command: node -v
#      - run: ls -al dist
#        # $BASH_ENV workaround due to env var isolation: https://discuss.circleci.com/t/exporting-environment-variables-from-sourced-scripts/4564/4
#      - run: if [ -n "`grep publish=true build.properties`" ]; then echo export MB_PUBLISH=true >> "$BASH_ENV"; else echo export MB_PUBLISH=false >> "$BASH_ENV"; fi
#      - run: echo "MB_PUBLISH=$MB_PUBLISH"
#      # fpm install started failing even after bundle update
#      - run: gem install fpm
#      - run: bundle install --without development
#      - run: ln -s dist/mountebank/src src
#      - run: ln -s dist/mountebank/package.json package.json
#      - run: node_modules/grunt-cli/bin/grunt deploy:s3 deploy:heroku deploy:npm deploy:docker

workflows:
  version: 2
  full_build:
    jobs:
      - pr:
          filters:
            branches:
              only: /^pull\/.*$/
      - build:
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
      - package:
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
#      - osx:
#          requires:
#            - build
#          filters:
#            branches:
#              only: master
#            tags:
#              only: /^v.*/
#      - package-source:
#          requires:
#            - build
#          filters:
#            branches:
#              only: master
#            tags:
#              only: /^v.*/
#      - package-zip:
#          requires:
#            - build
#          filters:
#            branches:
#              only: master
#            tags:
#              only: /^v.*/
#      - windows:
#          requires:
#            - package-zip
#          filters:
#            branches:
#              only: master
#            tags:
#              only: /^v.*/
#      - package-tarball:
#          requires:
#            - build
#          filters:
#            branches:
#              only: master
#            tags:
#              only: /^v.*/
#      - package-deb:
#          requires:
#            - build
#          filters:
#            branches:
#              only: master
#            tags:
#              only: /^v.*/
#      - package-rpm:
#          requires:
#            - build
#          filters:
#            branches:
#              only: master
#            tags:
#              only: /^v.*/
#      - dbAndWeb:
#          requires:
#            - build
#          filters:
#            branches:
#              only: master
#            tags:
#              only: /^v.*/
#      - nodev10:
#          requires:
#            - build
#          filters:
#            branches:
#              only: master
#            tags:
#              only: /^v.*/
#      - performance:
#          requires:
#            - build
#          filters:
#            branches:
#              only: master
#            tags:
#              only: /^v.*/
#      - deploy:
#          requires:
#            - package-source
#            - package-zip
#            - package-tarball
#            - package-deb
#            - package-rpm
#            - dbAndWeb
#            - nodev10
#          filters:
#            branches:
#              only: master
#            tags:
#              only: /^v.*/
